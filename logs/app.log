2024-06-05 02:59:22,223 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 100, in WriteDocument
    with conn.cursor() as cursor:
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:01:50,023 - kazoo.client - INFO - Connecting to localhost(127.0.0.1):2181, use_ssl: False
2024-06-05 03:01:50,024 - kazoo.client - DEBUG - Sending request(xid=None): Connect(protocol_version=0, last_zxid_seen=0, time_out=10000, session_id=0, passwd=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', read_only=None)
2024-06-05 03:01:50,030 - kazoo.client - INFO - Zookeeper connection established, state: CONNECTED
2024-06-05 03:01:50,260 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'r\xe0\xce/&dG\x14\xb0\x85R\xf7\xf6?\xd6\xeb', secret=b'O\x99\xc2\x99\xf9\x01C\xd0\xa63r\x8aC\x0e\x13\xca')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:01:50,261 - pyhive.hive - INFO - USE `default`
2024-06-05 03:01:50,261 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'r\xe0\xce/&dG\x14\xb0\x85R\xf7\xf6?\xd6\xeb', secret=b'O\x99\xc2\x99\xf9\x01C\xd0\xa63r\x8aC\x0e\x13\xca')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:01:50,392 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xb0\xb3\\\xa2\xe5 BK\x85@$\x80\xd9f\x89\x18', secret=b'KiI\x83X\xacO!\xab\xfct\x83\x0cc\xc8\xe7'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:01:50,394 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:01:50,394 - pyhive.hive - INFO - DESCRIBE documents
2024-06-05 03:01:50,394 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'r\xe0\xce/&dG\x14\xb0\x85R\xf7\xf6?\xd6\xeb', secret=b'O\x99\xc2\x99\xf9\x01C\xd0\xa63r\x8aC\x0e\x13\xca')), statement='DESCRIBE documents', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:01:50,482 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xe3V\x8e2\xe9\xd8I\x84\xa3\xeb\xda\xef\x9e\x12\xc6\x89', secret=b'\xb0\xee\xd6\xe2\xd5YFV\x98\x97\x93\xfa\xbell\x80'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:01:50,482 - __main__ - INFO - TABLE: documents is exit.
2024-06-05 03:01:50,484 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:01:50,499 - pyhive.hive - DEBUG - TCloseSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:02:00,510 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 98, in WriteDocument
    if lock.acquire(timeout=10):
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:02:31,896 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 98, in WriteDocument
    if lock.acquire(timeout=10):
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:03:21,398 - kazoo.client - INFO - Connecting to localhost(::1):2181, use_ssl: False
2024-06-05 03:03:21,398 - kazoo.client - DEBUG - Sending request(xid=None): Connect(protocol_version=0, last_zxid_seen=0, time_out=10000, session_id=0, passwd=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', read_only=None)
2024-06-05 03:03:21,404 - kazoo.client - INFO - Zookeeper connection established, state: CONNECTED
2024-06-05 03:03:21,684 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'On\x90\x8b*\xa2E\xf3\xb2 \x99\x9c\xdf\xac\xe5m', secret=b'\xd5")\xe1\x9dU@\xa3\x96\xe5\nq\xa3\x16\x9f\xfd')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:03:21,685 - pyhive.hive - INFO - USE `default`
2024-06-05 03:03:21,685 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'On\x90\x8b*\xa2E\xf3\xb2 \x99\x9c\xdf\xac\xe5m', secret=b'\xd5")\xe1\x9dU@\xa3\x96\xe5\nq\xa3\x16\x9f\xfd')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:03:21,862 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'Q\xcc\x8c\x1f\x15\xfcGs\xa4\x9d|2\xa6\x85w\x9d', secret=b'\xad\r\x0b\xad\xb3\xedF\xd2\xa6U\xf7\xc9\xa9\xd5\x90Z'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:03:21,866 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:03:21,867 - pyhive.hive - INFO - DESCRIBE documents
2024-06-05 03:03:21,867 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'On\x90\x8b*\xa2E\xf3\xb2 \x99\x9c\xdf\xac\xe5m', secret=b'\xd5")\xe1\x9dU@\xa3\x96\xe5\nq\xa3\x16\x9f\xfd')), statement='DESCRIBE documents', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:03:21,982 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xd9O\x8drKhM\xcb\x99@W\xffB\xce]\x8c', secret=b'4\xb4\xd9_W\xffBQ\xae\x8b3\xac(P.\x1f'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:03:21,982 - __main__ - INFO - TABLE: documents is exit.
2024-06-05 03:03:21,984 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:03:21,990 - pyhive.hive - DEBUG - TCloseSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:03:25,377 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 98, in WriteDocument
    if lock.acquire(timeout=10):
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:04:34,816 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 98, in WriteDocument
    if lock.acquire(timeout=10):
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:05:01,507 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 98, in WriteDocument
    if lock.acquire(timeout=10):
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:07:05,554 - grpc._server - ERROR - Exception calling application: relative paths not allowed
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 98, in WriteDocument
    if lock.acquire(timeout=10):
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 189, in acquire
    ephemeral=ephemeral,
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/retry.py", line 132, in __call__
    return func(*args, **kwargs)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 220, in _inner_acquire
    self._ensure_path()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/recipe/lock.py", line 133, in _ensure_path
    self.client.ensure_path(self.path)
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1132, in ensure_path
    return self.ensure_path_async(path, acl).get()
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1170, in ensure_path_async
    self.exists_async(path).rawlink(partial(exists_completion, path))
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/client.py", line 1210, in exists_async
    Exists(_prefix_root(self.chroot, path), watch), async_result
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 51, in _prefix_root
    join(_norm_root(root), path.lstrip("/")), trailing=trailing
  File "/home/linbei/.local/lib/python3.6/site-packages/kazoo/protocol/paths.py", line 9, in normpath
    raise ValueError("relative paths not allowed")
ValueError: relative paths not allowed
2024-06-05 03:07:44,332 - kazoo.client - INFO - Connecting to localhost(::1):2181, use_ssl: False
2024-06-05 03:07:44,333 - kazoo.client - DEBUG - Sending request(xid=None): Connect(protocol_version=0, last_zxid_seen=0, time_out=10000, session_id=0, passwd=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', read_only=None)
2024-06-05 03:07:44,337 - kazoo.client - INFO - Zookeeper connection established, state: CONNECTED
2024-06-05 03:07:44,484 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'!\xedx\xe4:gF\x19\x80\xf1c\x02\xa0eV\x93', secret=b'%\xafl\x9b\x87\xc4L\xde\xa00}\\\x02\xfd\x93\x00')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:07:44,484 - pyhive.hive - INFO - USE `default`
2024-06-05 03:07:44,484 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'!\xedx\xe4:gF\x19\x80\xf1c\x02\xa0eV\x93', secret=b'%\xafl\x9b\x87\xc4L\xde\xa00}\\\x02\xfd\x93\x00')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:07:44,665 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xb3C\xa5m4{@c\xb3`\xffoBT\xb4\xf8', secret=b"~L-\x0e\x80\x1cFu\xae\x99N\xf2\xa5'D\xa1"), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:07:44,667 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:07:44,667 - pyhive.hive - INFO - DESCRIBE documents
2024-06-05 03:07:44,667 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'!\xedx\xe4:gF\x19\x80\xf1c\x02\xa0eV\x93', secret=b'%\xafl\x9b\x87\xc4L\xde\xa00}\\\x02\xfd\x93\x00')), statement='DESCRIBE documents', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:07:44,738 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b',\xba\x92\xae\xd2\xe1G\x9f\xadoK\xa6$\xfec\xdf', secret=b'\xf0\x07\xd2\xa7A\xa4Eo\x89#\x0e\x7f\x04p\xbcl'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:07:44,738 - __main__ - INFO - TABLE: documents is exit.
2024-06-05 03:07:44,740 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:07:44,752 - pyhive.hive - DEBUG - TCloseSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:07:47,721 - kazoo.client - DEBUG - Sending request(xid=1): Exists(path='/locks/123', watcher=None)
2024-06-05 03:07:47,724 - kazoo.client - DEBUG - Received response(xid=1): ZnodeStat(czxid=34359738371, mzxid=34359738371, ctime=1717419308567, mtime=1717419308567, version=0, cversion=44, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=34359738442)
2024-06-05 03:07:47,725 - kazoo.client - DEBUG - Sending request(xid=2): Create(path='/locks/123/8a5f5a161f4d4e8aa57f9e9af0d330ad__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:07:47,735 - kazoo.client - DEBUG - Received response(xid=2): '/locks/123/8a5f5a161f4d4e8aa57f9e9af0d330ad__lock__0000000022'
2024-06-05 03:07:47,736 - kazoo.client - DEBUG - Sending request(xid=3): GetChildren(path='/locks/123', watcher=None)
2024-06-05 03:07:47,738 - kazoo.client - DEBUG - Received response(xid=3): ['8a5f5a161f4d4e8aa57f9e9af0d330ad__lock__0000000022']
2024-06-05 03:07:47,813 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd9x\xe7\xf5\x01\xc6M\xef\x93\xfd\x93\x04\x97?\xa5\xd2', secret=b'\xa1\x7f-t\x92\xd9I\xc0\xb4\x05&A\xff\xe4$\x9b')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:07:47,813 - pyhive.hive - INFO - USE `default`
2024-06-05 03:07:47,813 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd9x\xe7\xf5\x01\xc6M\xef\x93\xfd\x93\x04\x97?\xa5\xd2', secret=b'\xa1\x7f-t\x92\xd9I\xc0\xb4\x05&A\xff\xe4$\x9b')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:07:47,964 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xcc\xa6\xc1\xc9K\x0fO"\x84}h\xd3B\x03x!', secret=b'^/\r\x06\xf2\xfbA?\xa2\x95d\xc3\xfa\xa8\xea\xc4'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:07:47,965 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:07:47,965 - __main__ - INFO - Request to WriteDocument: 123
2024-06-05 03:07:47,965 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = '123'
2024-06-05 03:07:47,965 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd9x\xe7\xf5\x01\xc6M\xef\x93\xfd\x93\x04\x97?\xa5\xd2', secret=b'\xa1\x7f-t\x92\xd9I\xc0\xb4\x05&A\xff\xe4$\x9b')), statement="SELECT version FROM documents WHERE document_id = '123'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:07:48,150 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\x90\x9a\xbf\x1c8\x81Je\x94e\x1e\xe6\xe5%\xd3\x97', secret=b'o\x9a?\xc3\xda\xdeN\x00\x97\xcf\xe6\x8e3h!\xb5'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:07:48,164 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=[], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:07:48,165 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:07:48,165 - __main__ - INFO - Current version = None, Found version = 1
2024-06-05 03:07:48,169 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:07:48,169 - kazoo.client - DEBUG - Sending request(xid=4): Delete(path='/locks/123/8a5f5a161f4d4e8aa57f9e9af0d330ad__lock__0000000022', version=-1)
2024-06-05 03:07:48,176 - kazoo.client - DEBUG - Received response(xid=4): True
2024-06-05 03:08:42,942 - kazoo.client - DEBUG - Sending request(xid=5): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:08:42,948 - kazoo.client - DEBUG - Sending request(xid=6): Exists(path='/locks', watcher=None)
2024-06-05 03:08:42,949 - kazoo.client - DEBUG - Received response(xid=6): ZnodeStat(czxid=34359738370, mzxid=34359738370, ctime=1717419308557, mtime=1717419308557, version=0, cversion=1, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=1, pzxid=34359738371)
2024-06-05 03:08:42,950 - kazoo.client - DEBUG - Sending request(xid=7): Create(path='/locks/testdoc1', data=b'', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=0)
2024-06-05 03:08:42,956 - kazoo.client - DEBUG - Received response(xid=7): '/locks/testdoc1'
2024-06-05 03:08:42,956 - kazoo.client - DEBUG - Sending request(xid=8): Create(path='/locks/testdoc1/0779439f76e74f88899d8aa08d5a7f8c__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:08:42,964 - kazoo.client - DEBUG - Received response(xid=8): '/locks/testdoc1/0779439f76e74f88899d8aa08d5a7f8c__lock__0000000000'
2024-06-05 03:08:42,965 - kazoo.client - DEBUG - Sending request(xid=9): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:08:42,965 - kazoo.client - DEBUG - Received response(xid=9): ['0779439f76e74f88899d8aa08d5a7f8c__lock__0000000000']
2024-06-05 03:08:43,102 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd3\x84\xb3\x06{\x92C\xb5\x88#Q\x8dTI\x9f\xb8', secret=b'\xf3\xe2\x92)\x97\xbbGJ\x8f$B\xe7\xbb\xe2\xd6#')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:08:43,102 - pyhive.hive - INFO - USE `default`
2024-06-05 03:08:43,102 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd3\x84\xb3\x06{\x92C\xb5\x88#Q\x8dTI\x9f\xb8', secret=b'\xf3\xe2\x92)\x97\xbbGJ\x8f$B\xe7\xbb\xe2\xd6#')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:08:43,255 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'd\x08\x82\xfa\x02\xf9G\xc4\x9b\xc9\xb5n\xc3\xd9\tb', secret=b'\xc1!n`0\xf2O\xe1\x88\x19n\x8f\xf0\xca\xb8 '), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:08:43,262 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:08:43,262 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:08:43,262 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:08:43,262 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd3\x84\xb3\x06{\x92C\xb5\x88#Q\x8dTI\x9f\xb8', secret=b'\xf3\xe2\x92)\x97\xbbGJ\x8f$B\xe7\xbb\xe2\xd6#')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:08:43,385 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\\7\x8b\x93"\x85N$\xa19,\xdbq9%\x88', secret=b"\t\xe1\xb0'\x80\xd8O\xd4\xb1eX\xd3\x8d\xe2\x9dx"), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:08:43,403 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:08:43,404 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:08:43,404 - __main__ - INFO - Current version = ('v0',), Found version = v1
2024-06-05 03:08:43,409 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:08:43,409 - kazoo.client - DEBUG - Sending request(xid=10): Delete(path='/locks/testdoc1/0779439f76e74f88899d8aa08d5a7f8c__lock__0000000000', version=-1)
2024-06-05 03:08:43,412 - kazoo.client - DEBUG - Received response(xid=10): True
2024-06-05 03:10:34,760 - kazoo.client - DEBUG - Sending request(xid=11): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:10:34,761 - kazoo.client - DEBUG - Received response(xid=11): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=2, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640286)
2024-06-05 03:10:34,762 - kazoo.client - DEBUG - Sending request(xid=12): Create(path='/locks/testdoc1/27e92e518fa84dd281844dc189f4dd2c__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:10:34,766 - kazoo.client - DEBUG - Received response(xid=12): '/locks/testdoc1/27e92e518fa84dd281844dc189f4dd2c__lock__0000000001'
2024-06-05 03:10:34,767 - kazoo.client - DEBUG - Sending request(xid=13): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:10:34,768 - kazoo.client - DEBUG - Received response(xid=13): ['27e92e518fa84dd281844dc189f4dd2c__lock__0000000001']
2024-06-05 03:10:34,903 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'A+\xef\x1e\xce\xbdN\x1c\x86\xcb\x06A\xb9\xb0\x15\xb9', secret=b's<B>\xea\xdb@\x88\x8c\xa1T\xb4R{\xd0\xf0')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:10:34,903 - pyhive.hive - INFO - USE `default`
2024-06-05 03:10:34,903 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'A+\xef\x1e\xce\xbdN\x1c\x86\xcb\x06A\xb9\xb0\x15\xb9', secret=b's<B>\xea\xdb@\x88\x8c\xa1T\xb4R{\xd0\xf0')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:10:35,004 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xf0#\x9cij\xfaM\xa9\x89\x89\xec\xd8>*\x94@', secret=b'\x8b\x81\xa6\xee\xc5nJ\x11\x81I2\xd3\xab~W\xec'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:10:35,006 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:10:35,006 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:10:35,006 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:10:35,006 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'A+\xef\x1e\xce\xbdN\x1c\x86\xcb\x06A\xb9\xb0\x15\xb9', secret=b's<B>\xea\xdb@\x88\x8c\xa1T\xb4R{\xd0\xf0')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:10:35,223 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xcc\xc1\x91\xfahtH\xf6\xb9\x19\x1d\x02{\xd1O?', secret=b'\xcd\xb8t2\xb9OJF\xa6\x07B\x7fQ/yE'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:10:35,238 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:10:35,240 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:10:35,240 - __main__ - INFO - Current version = ('v0',), Found version = v1
2024-06-05 03:10:35,243 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:10:35,243 - kazoo.client - DEBUG - Sending request(xid=14): Delete(path='/locks/testdoc1/27e92e518fa84dd281844dc189f4dd2c__lock__0000000001', version=-1)
2024-06-05 03:10:35,248 - kazoo.client - DEBUG - Received response(xid=14): True
2024-06-05 03:10:52,705 - kazoo.client - DEBUG - Sending request(xid=15): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:10:52,706 - kazoo.client - DEBUG - Received response(xid=15): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=4, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640288)
2024-06-05 03:10:52,706 - kazoo.client - DEBUG - Sending request(xid=16): Create(path='/locks/testdoc1/adb43ad97e90459a992ce750aed33b05__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:10:52,709 - kazoo.client - DEBUG - Received response(xid=16): '/locks/testdoc1/adb43ad97e90459a992ce750aed33b05__lock__0000000002'
2024-06-05 03:10:52,709 - kazoo.client - DEBUG - Sending request(xid=17): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:10:52,718 - kazoo.client - DEBUG - Received response(xid=17): ['adb43ad97e90459a992ce750aed33b05__lock__0000000002']
2024-06-05 03:10:52,794 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'{\xf3\xce\x00\x1b\x15L\xb1\xb2;\xe3\xcfA\xdbq\x04', secret=b't\xb1\xdc\xcc\xd7\x13I]\xb9m\xa8\xc1\xb8\xb5\xc1\x94')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:10:52,794 - pyhive.hive - INFO - USE `default`
2024-06-05 03:10:52,794 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'{\xf3\xce\x00\x1b\x15L\xb1\xb2;\xe3\xcfA\xdbq\x04', secret=b't\xb1\xdc\xcc\xd7\x13I]\xb9m\xa8\xc1\xb8\xb5\xc1\x94')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:10:52,899 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b')\x06\xbb\x90\x14\x1aD\x00\x8e\xb2\xf18G\xc1#\xe6', secret=b'\xe9u\xbfj9\xabG\xcb\xa0\xd30\xff\x88\xc6\xbey'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:10:52,904 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:10:52,904 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:10:52,905 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:10:52,905 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'{\xf3\xce\x00\x1b\x15L\xb1\xb2;\xe3\xcfA\xdbq\x04', secret=b't\xb1\xdc\xcc\xd7\x13I]\xb9m\xa8\xc1\xb8\xb5\xc1\x94')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:10:53,055 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'"\x8a\x17\xbd\xc5\x94Ft\xab\n\xd3\xa7\x99\xaa\xb8\x81', secret=b'\xe9\x86\xa66n\x8dG\x85\x81(\xe8\xa6\x1f\xcf\xf8\xd6'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:10:53,078 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:10:53,079 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:10:53,083 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:10:53,083 - kazoo.client - DEBUG - Sending request(xid=18): Delete(path='/locks/testdoc1/adb43ad97e90459a992ce750aed33b05__lock__0000000002', version=-1)
2024-06-05 03:10:53,091 - kazoo.client - DEBUG - Received response(xid=18): True
2024-06-05 03:10:53,092 - grpc._server - ERROR - Exception calling application: 'Connection' object has no attribute 'begin'
Traceback (most recent call last):
  File "/home/linbei/.local/lib/python3.6/site-packages/grpc/_server.py", line 443, in _call_behavior
    response_or_iterator = behavior(argument, context)
  File "server_hive.py", line 114, in WriteDocument
    conn.begin()
AttributeError: 'Connection' object has no attribute 'begin'
2024-06-05 03:11:22,647 - kazoo.client - INFO - Connecting to localhost(::1):2181, use_ssl: False
2024-06-05 03:11:22,648 - kazoo.client - DEBUG - Sending request(xid=None): Connect(protocol_version=0, last_zxid_seen=0, time_out=10000, session_id=0, passwd=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', read_only=None)
2024-06-05 03:11:22,653 - kazoo.client - INFO - Zookeeper connection established, state: CONNECTED
2024-06-05 03:11:22,868 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'||)A \x03A1\x85\t\xe7\xd7\xf20\xaa\x1a', secret=b'\xdf\xd5\x003|\xd7K\x17\x84\x1eN\xedV\xfe\xb5\x9a')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:11:22,868 - pyhive.hive - INFO - USE `default`
2024-06-05 03:11:22,868 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'||)A \x03A1\x85\t\xe7\xd7\xf20\xaa\x1a', secret=b'\xdf\xd5\x003|\xd7K\x17\x84\x1eN\xedV\xfe\xb5\x9a')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:23,009 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xf9\x98\x81\x1f\xf9\x10M\xd7\x88\xaa>]3\xda\xa0\xe0', secret=b'\x03f\x18\xdb\x7f\xe3N\xeb\xbb2\xd8\x97\x04\xe75D'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:11:23,011 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:23,011 - pyhive.hive - INFO - DESCRIBE documents
2024-06-05 03:11:23,011 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'||)A \x03A1\x85\t\xe7\xd7\xf20\xaa\x1a', secret=b'\xdf\xd5\x003|\xd7K\x17\x84\x1eN\xedV\xfe\xb5\x9a')), statement='DESCRIBE documents', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:23,134 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xcdqSY\x98!A\xac\xb1\xde\x89\xd4\xed1%\xe5', secret=b'\xb5W\x94\x96&bMn\xa6\xe1\xbaLt\xc8\xf8)'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:11:23,134 - __main__ - INFO - TABLE: documents is exit.
2024-06-05 03:11:23,136 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:23,144 - pyhive.hive - DEBUG - TCloseSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:25,377 - kazoo.client - DEBUG - Sending request(xid=1): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:11:25,378 - kazoo.client - DEBUG - Received response(xid=1): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=6, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640290)
2024-06-05 03:11:25,378 - kazoo.client - DEBUG - Sending request(xid=2): Create(path='/locks/testdoc1/6bf05d57d46b44dd82eefe0b02a47a5f__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:11:25,382 - kazoo.client - DEBUG - Received response(xid=2): '/locks/testdoc1/6bf05d57d46b44dd82eefe0b02a47a5f__lock__0000000003'
2024-06-05 03:11:25,383 - kazoo.client - DEBUG - Sending request(xid=3): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:11:25,383 - kazoo.client - DEBUG - Received response(xid=3): ['6bf05d57d46b44dd82eefe0b02a47a5f__lock__0000000003']
2024-06-05 03:11:25,477 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xf8\x19Z\\\xf5\xdaH\x9e\xb6\x80\x82]?\x82\xf1g', secret=b'\xb1\xc7\xdc\xe0\x01\xf2G\x12\xb2\xa3\x9c4\xdf\x8fur')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:11:25,477 - pyhive.hive - INFO - USE `default`
2024-06-05 03:11:25,477 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xf8\x19Z\\\xf5\xdaH\x9e\xb6\x80\x82]?\x82\xf1g', secret=b'\xb1\xc7\xdc\xe0\x01\xf2G\x12\xb2\xa3\x9c4\xdf\x8fur')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:25,579 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b"\xd2\xc0\x96\x87\x11\xb9D\x94\x93='\xd9\xef\xed\xbfZ", secret=b'\xde\x88o\x16x\xc7IL\x94{\xb3\x9dF\x93IH'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:11:25,582 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:25,583 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:11:25,583 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:11:25,583 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xf8\x19Z\\\xf5\xdaH\x9e\xb6\x80\x82]?\x82\xf1g', secret=b'\xb1\xc7\xdc\xe0\x01\xf2G\x12\xb2\xa3\x9c4\xdf\x8fur')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:25,783 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'G{[J\xa9\x00Ks\x84\x05\xccxv\xbfI\xc7', secret=b'K\x93\xa8E\xd6hOW\xb0i\xc6\x9e\xe7\x04\xf1\xc1'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:11:25,807 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:11:25,808 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:11:25,811 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:25,811 - pyhive.hive - INFO - UPDATE TABLE SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'
2024-06-05 03:11:25,811 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xf8\x19Z\\\xf5\xdaH\x9e\xb6\x80\x82]?\x82\xf1g', secret=b'\xb1\xc7\xdc\xe0\x01\xf2G\x12\xb2\xa3\x9c4\xdf\x8fur')), statement="UPDATE TABLE SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:25,838 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name:28:27", 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:335', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:199', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:260', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:247', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:541', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:516', 'sun.reflect.GeneratedMethodAccessor21:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:498', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:422', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1899', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy37:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:563', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1149', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:624', 'java.lang.Thread:run:Thread.java:750', "*org.apache.hadoop.hive.ql.parse.ParseException:line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name:35:8", 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:223', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:74', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:67', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:616', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1826', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1773', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1768', 'org.apache.hadoop.hive.ql.reexec.ReExecDriver:compileAndRespond:ReExecDriver.java:126', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:197'], sqlState='42000', errorCode=40000, errorMessage="Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name"), operationHandle=None)
2024-06-05 03:11:25,838 - __main__ - INFO - WriteDocument OK. Has Been commit.
2024-06-05 03:11:25,839 - kazoo.client - DEBUG - Sending request(xid=4): Delete(path='/locks/testdoc1/6bf05d57d46b44dd82eefe0b02a47a5f__lock__0000000003', version=-1)
2024-06-05 03:11:25,842 - kazoo.client - DEBUG - Received response(xid=4): True
2024-06-05 03:11:30,722 - kazoo.client - DEBUG - Sending request(xid=5): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:11:30,724 - kazoo.client - DEBUG - Received response(xid=5): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=8, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640294)
2024-06-05 03:11:30,725 - kazoo.client - DEBUG - Sending request(xid=6): Create(path='/locks/testdoc1/f0b6427f7b9e422183bd2412ee22a199__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:11:30,731 - kazoo.client - DEBUG - Received response(xid=6): '/locks/testdoc1/f0b6427f7b9e422183bd2412ee22a199__lock__0000000004'
2024-06-05 03:11:30,732 - kazoo.client - DEBUG - Sending request(xid=7): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:11:30,733 - kazoo.client - DEBUG - Received response(xid=7): ['f0b6427f7b9e422183bd2412ee22a199__lock__0000000004']
2024-06-05 03:11:30,807 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'U\xb1\xddM\xea\xfdI\xba\xb91\x05:\xd0j\xd0\x83', secret=b'\xc1\x10\xee\xead\xcfL\xba\xb99\xc78k\x8c\x19\x92')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:11:30,807 - pyhive.hive - INFO - USE `default`
2024-06-05 03:11:30,807 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'U\xb1\xddM\xea\xfdI\xba\xb91\x05:\xd0j\xd0\x83', secret=b'\xc1\x10\xee\xead\xcfL\xba\xb99\xc78k\x8c\x19\x92')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:30,968 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'sd\xe2\x16\x07KJ\xbb\xacP{\xdau\xff\xd5\x9f', secret=b'\xccf\xc6`p\xbbN\n\x8e\xe7\xea\xf9\x9e\xfcm\xa2'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:11:30,970 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:30,970 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:11:30,970 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:11:30,970 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'U\xb1\xddM\xea\xfdI\xba\xb91\x05:\xd0j\xd0\x83', secret=b'\xc1\x10\xee\xead\xcfL\xba\xb99\xc78k\x8c\x19\x92')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:31,109 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xa7I\xd2T\xe7\xc0Eb\xb5\xf5\x88W\xba\xf6\x81\xf8', secret=b'\x05\xa1\x88\xe8\x11\xc2I\xce\x86\xb7n\xec\xd5\x17y\xba'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:11:31,129 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:11:31,131 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:11:31,137 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:31,138 - pyhive.hive - INFO - UPDATE TABLE SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'
2024-06-05 03:11:31,138 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'U\xb1\xddM\xea\xfdI\xba\xb91\x05:\xd0j\xd0\x83', secret=b'\xc1\x10\xee\xead\xcfL\xba\xb99\xc78k\x8c\x19\x92')), statement="UPDATE TABLE SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:31,161 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name:28:27", 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:335', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:199', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:260', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:247', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:541', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:516', 'sun.reflect.GeneratedMethodAccessor21:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:498', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:422', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1899', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy37:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:563', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1149', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:624', 'java.lang.Thread:run:Thread.java:750', "*org.apache.hadoop.hive.ql.parse.ParseException:line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name:35:8", 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:223', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:74', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:67', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:616', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1826', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1773', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1768', 'org.apache.hadoop.hive.ql.reexec.ReExecDriver:compileAndRespond:ReExecDriver.java:126', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:197'], sqlState='42000', errorCode=40000, errorMessage="Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name"), operationHandle=None)
2024-06-05 03:11:31,161 - __main__ - INFO - WriteDocument OK. Has Been commit.
2024-06-05 03:11:31,162 - kazoo.client - DEBUG - Sending request(xid=8): Delete(path='/locks/testdoc1/f0b6427f7b9e422183bd2412ee22a199__lock__0000000004', version=-1)
2024-06-05 03:11:31,170 - kazoo.client - DEBUG - Received response(xid=8): True
2024-06-05 03:11:36,030 - kazoo.client - DEBUG - Sending request(xid=9): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:11:36,031 - kazoo.client - DEBUG - Received response(xid=9): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=10, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640296)
2024-06-05 03:11:36,031 - kazoo.client - DEBUG - Sending request(xid=10): Create(path='/locks/testdoc1/4cd2d60120334882a6c659231d51c438__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:11:36,035 - kazoo.client - DEBUG - Received response(xid=10): '/locks/testdoc1/4cd2d60120334882a6c659231d51c438__lock__0000000005'
2024-06-05 03:11:36,036 - kazoo.client - DEBUG - Sending request(xid=11): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:11:36,037 - kazoo.client - DEBUG - Received response(xid=11): ['4cd2d60120334882a6c659231d51c438__lock__0000000005']
2024-06-05 03:11:36,093 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x12\xfc\xe7\x83v\xd4C\xc0\xab\xfa14<\xb7\x16\xf7', secret=b'\xaa\x8eb\xfd9\x99B\xe2\x84x+WA\xdb\xc9R')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:11:36,093 - pyhive.hive - INFO - USE `default`
2024-06-05 03:11:36,093 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x12\xfc\xe7\x83v\xd4C\xc0\xab\xfa14<\xb7\x16\xf7', secret=b'\xaa\x8eb\xfd9\x99B\xe2\x84x+WA\xdb\xc9R')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:36,211 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'S\xec\x07e>\xe4GF\xadb\xf5\x9cK\xb4\xfa\x1e', secret=b'\xa5q0d\x1b\x0eEx\xa31Jf\n\x0eK\xc9'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:11:36,212 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:36,212 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:11:36,212 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:11:36,213 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x12\xfc\xe7\x83v\xd4C\xc0\xab\xfa14<\xb7\x16\xf7', secret=b'\xaa\x8eb\xfd9\x99B\xe2\x84x+WA\xdb\xc9R')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:36,452 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xf8\x98&[\xfaSB\xfc\x88\x1f\xe2G\xd5\xc5\xfa\x1a', secret=b'fX\x9a2\xce\xcbMU\xa8KR\xe9lG\x16|'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:11:36,469 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:11:36,470 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:11:36,475 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:11:36,475 - pyhive.hive - INFO - UPDATE TABLE SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'
2024-06-05 03:11:36,475 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x12\xfc\xe7\x83v\xd4C\xc0\xab\xfa14<\xb7\x16\xf7', secret=b'\xaa\x8eb\xfd9\x99B\xe2\x84x+WA\xdb\xc9R')), statement="UPDATE TABLE SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:11:36,499 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name:28:27", 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:335', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:199', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:260', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:247', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:541', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:516', 'sun.reflect.GeneratedMethodAccessor21:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:498', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:422', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1899', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy37:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:563', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1149', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:624', 'java.lang.Thread:run:Thread.java:750', "*org.apache.hadoop.hive.ql.parse.ParseException:line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name:35:8", 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:223', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:74', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:67', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:616', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1826', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1773', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1768', 'org.apache.hadoop.hive.ql.reexec.ReExecDriver:compileAndRespond:ReExecDriver.java:126', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:197'], sqlState='42000', errorCode=40000, errorMessage="Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'SET' 'content' in table name"), operationHandle=None)
2024-06-05 03:11:36,499 - __main__ - INFO - WriteDocument OK. Has Been commit.
2024-06-05 03:11:36,500 - kazoo.client - DEBUG - Sending request(xid=12): Delete(path='/locks/testdoc1/4cd2d60120334882a6c659231d51c438__lock__0000000005', version=-1)
2024-06-05 03:11:36,505 - kazoo.client - DEBUG - Received response(xid=12): True
2024-06-05 03:13:22,045 - kazoo.client - INFO - Connecting to localhost(::1):2181, use_ssl: False
2024-06-05 03:13:22,045 - kazoo.client - DEBUG - Sending request(xid=None): Connect(protocol_version=0, last_zxid_seen=0, time_out=10000, session_id=0, passwd=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', read_only=None)
2024-06-05 03:13:22,050 - kazoo.client - INFO - Zookeeper connection established, state: CONNECTED
2024-06-05 03:13:22,236 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x13\r\x9e\xf0\x89[F\xa1\x98G\xb1+\x055$\xbe', secret=b'\xb9\x18\xe1\x82H\xacO\xe0\x8f\xf0F\xd09\xe4\xbc\xff')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:13:22,236 - pyhive.hive - INFO - USE `default`
2024-06-05 03:13:22,236 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x13\r\x9e\xf0\x89[F\xa1\x98G\xb1+\x055$\xbe', secret=b'\xb9\x18\xe1\x82H\xacO\xe0\x8f\xf0F\xd09\xe4\xbc\xff')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:13:22,364 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xe6\xa7\xea\xf38jM\xbe\x9a\x97Z\xda\xcb\xbajg', secret=b'\xd8N\x15\x933DOq\xad\x01_\xc7\xcf\xda\xc0\xcd'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:13:22,366 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:13:22,366 - pyhive.hive - INFO - DESCRIBE documents
2024-06-05 03:13:22,366 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x13\r\x9e\xf0\x89[F\xa1\x98G\xb1+\x055$\xbe', secret=b'\xb9\x18\xe1\x82H\xacO\xe0\x8f\xf0F\xd09\xe4\xbc\xff')), statement='DESCRIBE documents', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:13:22,435 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xb4\x81;l|%A\x0b\x80\xda?\x90\xa0\x90\xfe\x7f', secret=b'\x10?\x98\xa3\xcb&N"\xac\xa3\x11\xa7V\xa1\x81\x19'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:13:22,435 - __main__ - INFO - TABLE: documents is exit.
2024-06-05 03:13:22,438 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:13:22,448 - pyhive.hive - DEBUG - TCloseSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:13:24,712 - kazoo.client - DEBUG - Sending request(xid=1): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:13:24,713 - kazoo.client - DEBUG - Received response(xid=1): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=12, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640298)
2024-06-05 03:13:24,713 - kazoo.client - DEBUG - Sending request(xid=2): Create(path='/locks/testdoc1/db7fe0f026a845fdadd2d542b9930045__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:13:24,720 - kazoo.client - DEBUG - Received response(xid=2): '/locks/testdoc1/db7fe0f026a845fdadd2d542b9930045__lock__0000000006'
2024-06-05 03:13:24,720 - kazoo.client - DEBUG - Sending request(xid=3): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:13:24,721 - kazoo.client - DEBUG - Received response(xid=3): ['db7fe0f026a845fdadd2d542b9930045__lock__0000000006']
2024-06-05 03:13:24,808 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x03\xe2\x05\xd5f\\Ma\x8a,\x86\xc3oX\x04\xc9', secret=b'BLk\xb0\xd0\x8bB\xf5\xa9\xc4\xfa&<+\x90d')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:13:24,808 - pyhive.hive - INFO - USE `default`
2024-06-05 03:13:24,808 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x03\xe2\x05\xd5f\\Ma\x8a,\x86\xc3oX\x04\xc9', secret=b'BLk\xb0\xd0\x8bB\xf5\xa9\xc4\xfa&<+\x90d')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:13:24,937 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'sBS\x15#KN\x88\xaeS\x8b\xe0l\x07}\xf8', secret=b'\xf3\xf2\xda\xa9#6@\xeb\x8b\x8f\xadx\xce\xa7\xd2\x93'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:13:24,938 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:13:24,939 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:13:24,939 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:13:24,939 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x03\xe2\x05\xd5f\\Ma\x8a,\x86\xc3oX\x04\xc9', secret=b'BLk\xb0\xd0\x8bB\xf5\xa9\xc4\xfa&<+\x90d')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:13:25,161 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xdfS\xabG@\x12E8\xa5"\x99\x90\xa7\x9f\xfcb', secret=b'\x13\x9e\x16\\!\x98@\xc5\xbd\xf2A7\x9b52\xf4'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:13:25,190 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:13:25,191 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:13:25,194 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:13:25,194 - pyhive.hive - INFO - UPDATE TABLE documents SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'
2024-06-05 03:13:25,195 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x03\xe2\x05\xd5f\\Ma\x8a,\x86\xc3oX\x04\xc9', secret=b'BLk\xb0\xd0\x8bB\xf5\xa9\xc4\xfa&<+\x90d')), statement="UPDATE TABLE documents SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:13:25,225 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'documents' 'SET' in table name:28:27", 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:335', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:199', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:260', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:247', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:541', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:516', 'sun.reflect.GeneratedMethodAccessor21:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:498', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:422', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1899', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy37:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:563', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1149', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:624', 'java.lang.Thread:run:Thread.java:750', "*org.apache.hadoop.hive.ql.parse.ParseException:line 1:7 cannot recognize input near 'TABLE' 'documents' 'SET' in table name:35:8", 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:223', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:74', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:67', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:616', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1826', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1773', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1768', 'org.apache.hadoop.hive.ql.reexec.ReExecDriver:compileAndRespond:ReExecDriver.java:126', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:197'], sqlState='42000', errorCode=40000, errorMessage="Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'documents' 'SET' in table name"), operationHandle=None)
2024-06-05 03:13:25,225 - __main__ - INFO - WriteDocument OK. Has Been commit.
2024-06-05 03:13:25,225 - kazoo.client - DEBUG - Sending request(xid=4): Delete(path='/locks/testdoc1/db7fe0f026a845fdadd2d542b9930045__lock__0000000006', version=-1)
2024-06-05 03:13:25,230 - kazoo.client - DEBUG - Received response(xid=4): True
2024-06-05 03:14:08,257 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1c\xb9d\x8ea\nN\xdc\xb5\xef\xd1H\xd6\x14\xe4\xb3', secret=b'\xd3L~\xe4z\x85E\xa0\x85\x13\x8d1\x13\xfdj\xa4')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:14:08,257 - pyhive.hive - INFO - USE `default`
2024-06-05 03:14:08,257 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1c\xb9d\x8ea\nN\xdc\xb5\xef\xd1H\xd6\x14\xe4\xb3', secret=b'\xd3L~\xe4z\x85E\xa0\x85\x13\x8d1\x13\xfdj\xa4')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:14:08,382 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\x8180+e&H+\xa1_\xf9\xeb@\x9d\xab\xcd', secret=b'PT\x89\xcd\x91gG\x07\xad|B\x8e^\xc2\xe8?'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:14:08,384 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:14:08,384 - __main__ - INFO - Request to ReadDocument: testdoc1
2024-06-05 03:14:08,384 - pyhive.hive - INFO - SELECT content, version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:14:08,384 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1c\xb9d\x8ea\nN\xdc\xb5\xef\xd1H\xd6\x14\xe4\xb3', secret=b'\xd3L~\xe4z\x85E\xa0\x85\x13\x8d1\x13\xfdj\xa4')), statement="SELECT content, version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:14:08,546 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\x12G\n\x82\xe2%KY\x86\xd1\x170+J\x1f=', secret=b'\x86\x85\x06\xb6\x97\x96@\xda\x8f\xdb\xfd\xef+\x01\x04\xb3'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:14:08,571 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=[''], nulls=b'\x00'), binaryVal=None), TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:14:08,574 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='content', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None), TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=2, comment=None)]))
2024-06-05 03:14:08,574 - __main__ - INFO - Document Found
2024-06-05 03:14:19,663 - kazoo.client - DEBUG - Sending request(xid=5): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:14:19,664 - kazoo.client - DEBUG - Received response(xid=5): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=14, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640301)
2024-06-05 03:14:19,665 - kazoo.client - DEBUG - Sending request(xid=6): Create(path='/locks/testdoc1/5244b7b5205c44c89b4178109aac4fdf__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:14:19,669 - kazoo.client - DEBUG - Received response(xid=6): '/locks/testdoc1/5244b7b5205c44c89b4178109aac4fdf__lock__0000000007'
2024-06-05 03:14:19,670 - kazoo.client - DEBUG - Sending request(xid=7): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:14:19,671 - kazoo.client - DEBUG - Received response(xid=7): ['5244b7b5205c44c89b4178109aac4fdf__lock__0000000007']
2024-06-05 03:14:19,762 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xe084\xe8o\xa2HG\x9b(|\xdf\xf9\xbc\xa9.', secret=b'\xa9\xa7\x1a\x99\n\xf1H\xd7\x89\xa5>(\x96~R\x82')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:14:19,762 - pyhive.hive - INFO - USE `default`
2024-06-05 03:14:19,762 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xe084\xe8o\xa2HG\x9b(|\xdf\xf9\xbc\xa9.', secret=b'\xa9\xa7\x1a\x99\n\xf1H\xd7\x89\xa5>(\x96~R\x82')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:14:19,866 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'y[\x8f_0\xb7OU\xacx\xae\xcf\xc2g\x98a', secret=b'\xa0\xa6\xafI;eF\x96\xb7beSK\x8cN\xa2'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:14:19,868 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:14:19,868 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:14:19,868 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:14:19,869 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xe084\xe8o\xa2HG\x9b(|\xdf\xf9\xbc\xa9.', secret=b'\xa9\xa7\x1a\x99\n\xf1H\xd7\x89\xa5>(\x96~R\x82')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:14:19,998 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xf7\x95\xb9\xbfrqL.\x83LJ\x88\x97.I\x10', secret=b'X\x14\x9f\x98*\x04A;\x9b\xdd\xea\x07`7j\xba'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:14:20,012 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:14:20,014 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:14:20,021 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:14:20,021 - pyhive.hive - INFO - UPDATE TABLE documents SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'
2024-06-05 03:14:20,021 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xe084\xe8o\xa2HG\x9b(|\xdf\xf9\xbc\xa9.', secret=b'\xa9\xa7\x1a\x99\n\xf1H\xd7\x89\xa5>(\x96~R\x82')), statement="UPDATE TABLE documents SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:14:20,038 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'documents' 'SET' in table name:28:27", 'org.apache.hive.service.cli.operation.Operation:toSQLException:Operation.java:335', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:199', 'org.apache.hive.service.cli.operation.SQLOperation:runInternal:SQLOperation.java:260', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:247', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:541', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:516', 'sun.reflect.GeneratedMethodAccessor21:invoke::-1', 'sun.reflect.DelegatingMethodAccessorImpl:invoke:DelegatingMethodAccessorImpl.java:43', 'java.lang.reflect.Method:invoke:Method.java:498', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:78', 'org.apache.hive.service.cli.session.HiveSessionProxy:access$000:HiveSessionProxy.java:36', 'org.apache.hive.service.cli.session.HiveSessionProxy$1:run:HiveSessionProxy.java:63', 'java.security.AccessController:doPrivileged:AccessController.java:-2', 'javax.security.auth.Subject:doAs:Subject.java:422', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1899', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:59', 'com.sun.proxy.$Proxy37:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:563', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:39', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:56', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:286', 'java.util.concurrent.ThreadPoolExecutor:runWorker:ThreadPoolExecutor.java:1149', 'java.util.concurrent.ThreadPoolExecutor$Worker:run:ThreadPoolExecutor.java:624', 'java.lang.Thread:run:Thread.java:750', "*org.apache.hadoop.hive.ql.parse.ParseException:line 1:7 cannot recognize input near 'TABLE' 'documents' 'SET' in table name:35:8", 'org.apache.hadoop.hive.ql.parse.ParseDriver:parse:ParseDriver.java:223', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:74', 'org.apache.hadoop.hive.ql.parse.ParseUtils:parse:ParseUtils.java:67', 'org.apache.hadoop.hive.ql.Driver:compile:Driver.java:616', 'org.apache.hadoop.hive.ql.Driver:compileInternal:Driver.java:1826', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1773', 'org.apache.hadoop.hive.ql.Driver:compileAndRespond:Driver.java:1768', 'org.apache.hadoop.hive.ql.reexec.ReExecDriver:compileAndRespond:ReExecDriver.java:126', 'org.apache.hive.service.cli.operation.SQLOperation:prepare:SQLOperation.java:197'], sqlState='42000', errorCode=40000, errorMessage="Error while compiling statement: FAILED: ParseException line 1:7 cannot recognize input near 'TABLE' 'documents' 'SET' in table name"), operationHandle=None)
2024-06-05 03:14:20,038 - __main__ - INFO - WriteDocument OK. Has Been commit.
2024-06-05 03:14:20,038 - kazoo.client - DEBUG - Sending request(xid=8): Delete(path='/locks/testdoc1/5244b7b5205c44c89b4178109aac4fdf__lock__0000000007', version=-1)
2024-06-05 03:14:20,043 - kazoo.client - DEBUG - Received response(xid=8): True
2024-06-05 03:15:40,412 - kazoo.client - INFO - Connecting to localhost(127.0.0.1):2181, use_ssl: False
2024-06-05 03:15:40,412 - kazoo.client - DEBUG - Sending request(xid=None): Connect(protocol_version=0, last_zxid_seen=0, time_out=10000, session_id=0, passwd=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', read_only=None)
2024-06-05 03:15:40,418 - kazoo.client - INFO - Zookeeper connection established, state: CONNECTED
2024-06-05 03:15:40,587 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'^u\xad\x17\xbbmH\x1d\xb1\x1f\x02\xad\xb5\x8f\x08k', secret=b'\xb49GK\x10\xc3C\xfa\x85HB\x1b\xa7\xd0\x9a.')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:15:40,588 - pyhive.hive - INFO - USE `default`
2024-06-05 03:15:40,588 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'^u\xad\x17\xbbmH\x1d\xb1\x1f\x02\xad\xb5\x8f\x08k', secret=b'\xb49GK\x10\xc3C\xfa\x85HB\x1b\xa7\xd0\x9a.')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:15:40,717 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xd1\xc7q#\xd0\xceM\xa6\x84\xb68.\x11\x8bW\xd1', secret=b'!\rPf\x1e\xbcE\xe7\x84\xee(\xbf-\xf5,p'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:15:40,719 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:15:40,719 - pyhive.hive - INFO - DESCRIBE documents
2024-06-05 03:15:40,719 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'^u\xad\x17\xbbmH\x1d\xb1\x1f\x02\xad\xb5\x8f\x08k', secret=b'\xb49GK\x10\xc3C\xfa\x85HB\x1b\xa7\xd0\x9a.')), statement='DESCRIBE documents', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:15:40,869 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xa3\xc0[\xc3\t7C\xc9\x93^\xb0\x8eU\xa9.\xa1', secret=b'2\x96\xb8\xb15\x88L\xb9\xa44\x12\xe1\x93\x1b\x8am'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:15:40,869 - __main__ - INFO - TABLE: documents is exit.
2024-06-05 03:15:40,873 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:15:40,879 - pyhive.hive - DEBUG - TCloseSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:15:43,924 - kazoo.client - DEBUG - Sending request(xid=1): Exists(path='/locks/testdoc1', watcher=None)
2024-06-05 03:15:43,926 - kazoo.client - DEBUG - Received response(xid=1): ZnodeStat(czxid=47244640284, mzxid=47244640284, ctime=1717556922948, mtime=1717556922948, version=0, cversion=16, aversion=0, ephemeralOwner=0, dataLength=0, numChildren=0, pzxid=47244640304)
2024-06-05 03:15:43,927 - kazoo.client - DEBUG - Sending request(xid=2): Create(path='/locks/testdoc1/9990944ff234476aa87efeb8453d0750__lock__', data=b'document_lock', acl=[ACL(perms=31, acl_list=['ALL'], id=Id(scheme='world', id='anyone'))], flags=3)
2024-06-05 03:15:43,931 - kazoo.client - DEBUG - Received response(xid=2): '/locks/testdoc1/9990944ff234476aa87efeb8453d0750__lock__0000000008'
2024-06-05 03:15:43,931 - kazoo.client - DEBUG - Sending request(xid=3): GetChildren(path='/locks/testdoc1', watcher=None)
2024-06-05 03:15:43,932 - kazoo.client - DEBUG - Received response(xid=3): ['9990944ff234476aa87efeb8453d0750__lock__0000000008']
2024-06-05 03:15:43,991 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xa8f\xf5\xd8\xd0ZB\x08\x90LU.\xe0\x9dw0', secret=b'U<\xa7\x0bPXE2\x9c\x91`\x18\x13Z\ti')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:15:43,992 - pyhive.hive - INFO - USE `default`
2024-06-05 03:15:43,992 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xa8f\xf5\xd8\xd0ZB\x08\x90LU.\xe0\x9dw0', secret=b'U<\xa7\x0bPXE2\x9c\x91`\x18\x13Z\ti')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:15:44,109 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xd0&|kC\xaaB\xf2\xa6\xcfB\xf0\x8f\xc5\xf9@', secret=b'\x1d\xb2\xaey\x930H\xd8\xb2\x1e\xadzz\xf4\xd7f'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:15:44,111 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:15:44,111 - __main__ - INFO - Request to WriteDocument: testdoc1
2024-06-05 03:15:44,111 - pyhive.hive - INFO - SELECT version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:15:44,111 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xa8f\xf5\xd8\xd0ZB\x08\x90LU.\xe0\x9dw0', secret=b'U<\xa7\x0bPXE2\x9c\x91`\x18\x13Z\ti')), statement="SELECT version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:15:44,221 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\x99\x1b\xb2\xb9\xee\xff@:\x98\x10\x12\xd7i\xde\xb9\x8c', secret=b'ft\xcby\\\xebL\xc7\x83Z\x13\xe2\xdaK\xe4\x06'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:15:44,240 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v0'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:15:44,242 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None)]))
2024-06-05 03:15:44,246 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:15:44,247 - pyhive.hive - INFO - UPDATE documents SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'
2024-06-05 03:15:44,247 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xa8f\xf5\xd8\xd0ZB\x08\x90LU.\xe0\x9dw0', secret=b'U<\xa7\x0bPXE2\x9c\x91`\x18\x13Z\ti')), statement="UPDATE documents SET content = 'This is the document content', version = 'v1' WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:16:26,560 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\x92\x0f\x9d\xa9W\xf0E\xf0\xb7*\xa6*Fu\x89\x95', secret=b'\x80LC\xaa\x107DX\xb0\\\xe0\xdc3\xa9\x8bW'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:16:26,562 - __main__ - INFO - WriteDocument OK. Has Been commit.
2024-06-05 03:16:26,572 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:16:26,573 - kazoo.client - DEBUG - Sending request(xid=4): Delete(path='/locks/testdoc1/9990944ff234476aa87efeb8453d0750__lock__0000000008', version=-1)
2024-06-05 03:16:26,581 - kazoo.client - DEBUG - Received response(xid=4): True
2024-06-05 03:16:44,210 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd1\xda\xbd\xfe\x7f{C\x9b\xbd\x83T\xe7\xa3a)v', secret=b'\xbe\x97\xd9\x84\xef"@\x93\x9d\xfe\xb1\xbf\xa8z\x97\xdb')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:16:44,210 - pyhive.hive - INFO - USE `default`
2024-06-05 03:16:44,210 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd1\xda\xbd\xfe\x7f{C\x9b\xbd\x83T\xe7\xa3a)v', secret=b'\xbe\x97\xd9\x84\xef"@\x93\x9d\xfe\xb1\xbf\xa8z\x97\xdb')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:16:44,593 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xc8s\x95Gc\xadJ\xf5\x99\xad\x9d\xc5\x10\x91\xea!', secret=b'\x1d\xb7\xaf\x8d\\3C\xa0\xaf\r\x92\x0e\x81/\x072'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:16:44,594 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:16:44,594 - __main__ - INFO - Request to ReadDocument: testdoc1
2024-06-05 03:16:44,594 - pyhive.hive - INFO - SELECT content, version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:16:44,594 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\xd1\xda\xbd\xfe\x7f{C\x9b\xbd\x83T\xe7\xa3a)v', secret=b'\xbe\x97\xd9\x84\xef"@\x93\x9d\xfe\xb1\xbf\xa8z\x97\xdb')), statement="SELECT content, version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:16:44,722 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xba\xa8_\xae\xe7)B\xf9\x86_^[\xf7\xb5s\x1f', secret=b'<\x80\xf4\x12*\xa0G>\xa1\xa9h\xbdL\xce\xad\xa6'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:16:44,759 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['This is the document content'], nulls=b'\x00'), binaryVal=None), TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v1'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:16:44,773 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='content', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None), TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=2, comment=None)]))
2024-06-05 03:16:44,773 - __main__ - INFO - Document Found
2024-06-05 03:17:00,971 - pyhive.hive - DEBUG - TOpenSessionResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), serverProtocolVersion=5, sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1e\xeb,\x98*\xffON\xad\xa1\xe1+#\xbd"\xe1', secret=b'\xf5:I\x88\x95\x99K\xeb\xa7h\xc7\xcd[\xfcj\xd3')), configuration={'hive.server2.thrift.resultset.default.fetch.size': '1000'})
2024-06-05 03:17:00,971 - pyhive.hive - INFO - USE `default`
2024-06-05 03:17:00,971 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1e\xeb,\x98*\xffON\xad\xa1\xe1+#\xbd"\xe1', secret=b'\xf5:I\x88\x95\x99K\xeb\xa7h\xc7\xcd[\xfcj\xd3')), statement='USE `default`', confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:17:01,109 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'r\x01#\x04]\xc6E\xde\x9b\x0c\x0b\nZ\xf0\xf9\x18', secret=b'\xa0u\r\x111$E9\x8a\x03\x0b|\xa0?\xa4*'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:17:01,111 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:17:01,111 - __main__ - INFO - Request to ReadDocument: testdoc1
2024-06-05 03:17:01,111 - pyhive.hive - INFO - SELECT content, version FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:17:01,111 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1e\xeb,\x98*\xffON\xad\xa1\xe1+#\xbd"\xe1', secret=b'\xf5:I\x88\x95\x99K\xeb\xa7h\xc7\xcd[\xfcj\xd3')), statement="SELECT content, version FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:17:01,223 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b"'\n\xd0\xb8 \xddN[\x9f3\xc6\xf3H\x9b~C", secret=b'0I\xb6\xcb\x16\x97H\x02\xaa\x84\x8c\xf1E\xd6\x06\xca'), operationType=0, hasResultSet=True, modifiedRowCount=None))
2024-06-05 03:17:01,252 - pyhive.hive - DEBUG - TFetchResultsResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), hasMoreRows=False, results=TRowSet(startRowOffset=0, rows=[], columns=[TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['This is the document content'], nulls=b'\x00'), binaryVal=None), TColumn(boolVal=None, byteVal=None, i16Val=None, i32Val=None, i64Val=None, doubleVal=None, stringVal=TStringColumn(values=['v1'], nulls=b'\x00'), binaryVal=None)], binaryColumns=None, columnCount=None))
2024-06-05 03:17:01,254 - pyhive.hive - DEBUG - TGetResultSetMetadataResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), schema=TTableSchema(columns=[TColumnDesc(columnName='content', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=1, comment=None), TColumnDesc(columnName='version', typeDesc=TTypeDesc(types=[TTypeEntry(primitiveEntry=TPrimitiveTypeEntry(type=7, typeQualifiers=None), arrayEntry=None, mapEntry=None, structEntry=None, unionEntry=None, userDefinedTypeEntry=None)]), position=2, comment=None)]))
2024-06-05 03:17:01,254 - __main__ - INFO - Document testdoc1 exist, can delete.
2024-06-05 03:17:01,258 - pyhive.hive - DEBUG - TCloseOperationResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None))
2024-06-05 03:17:01,258 - pyhive.hive - INFO - DELETE FROM documents WHERE document_id = 'testdoc1'
2024-06-05 03:17:01,258 - pyhive.hive - DEBUG - TExecuteStatementReq(sessionHandle=TSessionHandle(sessionId=THandleIdentifier(guid=b'\x1e\xeb,\x98*\xffON\xad\xa1\xe1+#\xbd"\xe1', secret=b'\xf5:I\x88\x95\x99K\xeb\xa7h\xc7\xcd[\xfcj\xd3')), statement="DELETE FROM documents WHERE document_id = 'testdoc1'", confOverlay=None, runAsync=False, queryTimeout=0)
2024-06-05 03:17:39,668 - pyhive.hive - DEBUG - TExecuteStatementResp(status=TStatus(statusCode=0, infoMessages=None, sqlState=None, errorCode=None, errorMessage=None), operationHandle=TOperationHandle(operationId=THandleIdentifier(guid=b'\xe2\x92\xe3N\x03\xf2He\xa1uC\xf7~\x01[\xee', secret=b'\xce\x83\x05\xa1I\x1eL\xb2\x99fw\xc8\xf3\xaa\n\xb4'), operationType=0, hasResultSet=False, modifiedRowCount=None))
2024-06-05 03:17:39,668 - __main__ - INFO - Document testdoc1 delete successfully.
